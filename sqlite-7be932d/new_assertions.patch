--- a/src/shell.c.in	2020-12-15 22:10:02.664104694 -0500
+++ b/src/shell.c.in	2020-12-16 03:00:00.138297699 -0500
@@ -175,7 +175,6 @@
 extern char *sqlite3_win32_utf8_to_mbcs_v2(const char *, int);
 extern LPWSTR sqlite3_win32_utf8_to_unicode(const char *zText);
 #endif
-
 /* On Windows, we normally run with output mode of TEXT so that \n characters
 ** are automatically translated into \r\n.  However, this behavior needs
 ** to be disabled in some cases (ex: when generating CSV output and when
@@ -2976,6 +2975,14 @@
         restore_debug_trace_modes();
       }
 
+      // used as new assertions during replay
+      // I understand this does not directly related to the buggy behaviour and
+      // may not be helpful to debugging at all.
+      // I find the root cause here is corrupted/inconsistent data structure
+      // caused by "missing" updates. I cannot think of a better way to assert
+      // them, since they are "missing".
+      assert(pArgs->pStmt == pStmt);
+
       if( pArg ){
         pArg->cMode = pArg->mode;
         if( pArg->autoExplain ){
